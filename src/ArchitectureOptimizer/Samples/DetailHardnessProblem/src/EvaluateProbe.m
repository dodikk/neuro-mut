function[] = EvaluateProbe(...
    testProbe, testAnswer, ...
    net                  , ...
    normalizationSettings, ... 
    formatSettings       )
%
%
%%%%%%%%%%%%%%%%%%%

    conditionsVt = [testAnswer];
    [patterns, answers] = Data2TrainingSet(testProbe, conditionsVt);
    
    
    
    nPatterns = DH_Utils_NormalizeTrainingData( ...
        patterns                              , ...
        normalizationSettings.cutIdRange      , ...
        normalizationSettings.radiusRange     , ...
        normalizationSettings.hardnessRange   , ...
        normalizationSettings.targetRange     );
    
    
    nAnswers = DH_Utils_NormalizeAnswerData(      ...
        answers                                 , ...
        normalizationSettings.durationRange     , ...
        normalizationSettings.airPressureRange  , ...
        normalizationSettings.waterPressureRange, ...
        normalizationSettings.targetRange       );
    
        
    [Y, Pf, Af, E, perf] = sim(net, nPatterns', [], [], nAnswers');
   
    msgPerf = sprintf('Training : %s', perf);
    disp(msgPerf);

    
    averageY = mean(Y, 2)';
    dAverageY = DH_Utils_DeNormalizeAnswerData(   ...
        averageY                                , ...
        normalizationSettings.durationRange     , ...
        normalizationSettings.airPressureRange  , ...
        normalizationSettings.waterPressureRange, ...
        normalizationSettings.targetRange       );

    
    
    simulatedCondition = Row2Conditions(dAverageY, formatSettings);
    
    [receivedAirPlot, receivedWaterPlot] = GetPhasesPlotData(simulatedCondition.phases);
    [expectedAirPlot, expectedWaterPlot] = GetPhasesPlotData(testAnswer.phases        );

	PlotDataHardnessResults(...
		expectedAirPlot  , receivedAirPlot  , ...
		expectedWaterPlot, receivedWaterPlot);
    

return
end

