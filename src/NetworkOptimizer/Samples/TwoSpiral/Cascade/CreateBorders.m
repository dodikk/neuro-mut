function [ pLow, pUp ] = CreateBorders()
%
%
%%%%%%%%%%%%%%%%

% neuronsCount = 16;
% pLow.weights = ones(neuronsCount) * (-120);
% pUp.weights  = ones(neuronsCount) * (+50);
% pLow.error = inf;
% pUp.error = inf;


precision = 10;

solutionWeights = ...
[ ...
0	0	16.48	-13.52	-2.41	8.23	-5.69	-5.29	-3.63	4.36	-1.45	4.55	-4.39	-1.01	2.7	-4.29     ;...
0	0	-118.39	-2.87	-12.57	-5.87	-7.04	4.03	-3.72	3.72	-5.14	3.81	3.45	0.07	-3.42	2.72  ;...
0	0	0	20.71	-0.99	-7.55	-8.32	3.33	-14.66	4.1	-1.45	7.5	1.45	2.57	-1.73	0.51              ;... 
0	0	0	0	-31.03	1.44	-6.44	-4.22	-9.34	-8.99	-3.75	1.13	-4.73	-0.82	0.81	-6.49         ;...
0	0	0	0	0	-29.31	-0.74	5.44	-0.55	1.68	-0.18	5.47	0.54	2.39	-1.25	4.52              ;... 
0	0	0	0	0	0	28.92	1.95	-6.55	-8.79	0.83	-0.15	1.49	0.33	-10.83	8.19                  ;...
0	0	0	0	0	0	0	25.96	-14.07	2.06	-8.94	11.69	4.38	-0.83	0.24	4.04                      ;...
0	0	0	0	0	0	0	0	-3.21	42.65	-8.1	1.96	0.88	-2.11	10.12	-3.19                         ;...
0	0	0	0	0	0	0	0	0	13.56	21.35	3.43	-3.12	19.49	3.02	-10.92                            ;...
0	0	0	0	0	0	0	0	0	0	-3.44	2.87	-5.44	-20.62	2.06	13.23                                 ;...
0	0	0	0	0	0	0	0	0	0	0	19.26	-0.54	0.42	1.28	0.06                                      ;...
0	0	0	0	0	0	0	0	0	0	0	0	25.27	-5.42	-7.88	-2.82                                         ;...
0	0	0	0	0	0	0	0	0	0	0	0	0	26.21	-0.76	-9.03                                             ;...
0	0	0	0	0	0	0	0	0	0	0	0	0	0	10.06	-20.52                                                ;...
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-2.77                                                     ;...
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0                                                         ...
];


pLow.error = Inf;
pUp.error = Inf;


[pLow.weights, pUp.weights] = GetRange(solutionWeights, precision);


return
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [low, up] = GetRange(solutionWeights, precision)
%
%
%%%%%%%%%%%%%
    delta = ones(size(solutionWeights)) * abs(precision);
    
    low = solutionWeights - delta;
    up =  solutionWeights + delta;
    
return
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

