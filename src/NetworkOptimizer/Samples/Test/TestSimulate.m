function [] = TestSimulate()

conn = [0 0 0 1 0 1 0 0; ...
        0 0 0 0 1 0 0 0; ...
        0 0 0 0 1 0 1 0; ...
        0 0 0 0 0 1 0 1; ...
        0 0 0 0 0 0 1 1; ...
        0 0 0 0 0 0 0 1; ...
        0 0 0 0 0 0 0 1; ...
        0 0 0 0 0 0 0 0 ];
    
fcn = [@Linear @Linear @Linear @Linear @Linear @Linear @Linear @Linear];
inputs = [1 2 3];
outputs = [8];

    
net.connections = conn;
net.functions = fcn;
net.inputs = inputs;
net.outputs = outputs;

weights = ...
       [0 0 0 3 0 5 0 0; ...
        0 0 0 0 -4 0 0 0; ...
        0 0 0 0 6 0 1 0; ...
        0 0 0 0 0 -2 0 1; ...
        0 0 0 0 0 0 1 3; ...
        0 0 0 0 0 0 0 1; ...
        0 0 0 0 0 0 0 5; ...
        0 0 0 0 0 0 0 0 ];
    
in = [1 1 1];
exp = [5];
    
[err, signal] = SimulateSingleNetworkRun(net, weights, in, exp);

expSig = [1 1 1 3 2 -1 3 23];

AssertEqual(signal, expSig);    
AssertEqual(err, 5 - 23);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

disp('Test simulate successfull');

